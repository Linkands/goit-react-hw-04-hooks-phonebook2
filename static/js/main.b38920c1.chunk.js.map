{"version":3,"sources":["components/Phonebook/Phonebook.styles.jsx","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.styles.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["Wrapper","styled","div","Header","h2","InputName","p","SubmitButton","button","Phonebook","onSubmit","onChange","name","number","type","pattern","title","required","value","List","ul","Item","li","DeleteButton","Contacts","contactsData","onDeleteContact","map","id","onClick","Filter","filter","autoComplete","App","mounted","useRef","useState","contacts","setContacts","setFilter","setName","setNumber","useEffect","current","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","handleChange","e","target","eraseInputs","preventDefault","randomId","uuidv4","checkName","contact","includes","checkNumber","alert","normalizedFilter","toLowerCase","visibleContacts","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b38920c1.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const Header = styled.h2`\n  color: #4b3b40;\n`\nexport const InputName = styled.p`\n  color: #82735c;\n  margin: 0;\n`\nexport const SubmitButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-top: 20px;\n  cursor: pointer;\n`\n","import React from 'react'\nimport { Header, SubmitButton, InputName, Wrapper } from './Phonebook.styles'\nimport PropTypes from 'prop-types'\n\nfunction Phonebook({ onSubmit, onChange, name, number }) {\n  return (\n    <Wrapper>\n      <Header>Phonebook</Header>\n      <form onSubmit={onSubmit}>\n        <InputName>Name</InputName>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n          value={name}\n        />\n        <InputName>Number</InputName>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onChange}\n          value={number}\n        />\n        <br />\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </form>\n    </Wrapper>\n  )\n}\n\nPhonebook.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  number: PropTypes.node,\n}\n\nexport default Phonebook\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const List = styled.ul`\n  color: #4b3b40;\n`\nexport const Item = styled.li`\n  color: #82735c;\n  list-style: none;\n`\nexport const DeleteButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-left: 20px;\n  margin-top: 10px;\n  cursor: pointer;\n`\nexport const Header = styled.h2`\n  color: #4b3b40;\n`\n","import React from 'react'\nimport { Wrapper, List, Item, DeleteButton, Header } from './Contacts.styles'\nimport PropTypes from 'prop-types'\n\nfunction Contacts({ contactsData, onDeleteContact }) {\n  return (\n    <Wrapper>\n      <Header>Contacts</Header>\n      <List>\n        {contactsData.map(({ id, name, number }) => (\n          <Item key={id}>\n            {name}: {number}\n            <DeleteButton type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete contact\n            </DeleteButton>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  )\n}\n\nContacts.propTypes = {\n  id: PropTypes.node,\n  name: PropTypes.string,\n  number: PropTypes.number,\n}\n\nexport default Contacts\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const Header = styled.p`\n  color: #4b3b40;\n  margin-top: 10px;\n  margin-bottom: 0px;\n`\n","import React from 'react'\nimport { Header, Wrapper } from './Filter.styles'\nimport PropTypes from 'prop-types'\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <Wrapper>\n      <Header>Find contacts by name</Header>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        autoComplete=\"off\"\n      />\n    </Wrapper>\n  )\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nexport default Filter\n","import React, { useState, useEffect, useRef } from 'react'\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nfunction App() {\n  const mounted = useRef(false)\n  const [contacts, setContacts] = useState([])\n  const [filter, setFilter] = useState('')\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true\n      return\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts')\n\n    const parsedContacts = JSON.parse(contacts)\n    if (parsedContacts) {\n      setContacts(parsedContacts)\n    }\n  }, [])\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      case 'filter':\n        setFilter(value)\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const randomId = uuidv4()\n    const checkName = contacts.map((contact) => contact.name).includes(name)\n    const checkNumber = contacts\n      .map((contact) => contact.number)\n      .includes(number)\n\n    if (checkName) {\n      alert(`${name} is already in contacts`)\n    } else if (checkNumber) {\n      alert(`Number ${number} is already in contacts`)\n    } else {\n      setContacts([...contacts, { id: randomId, name: name, number: number }])\n    }\n\n    eraseInputs()\n  }\n\n  const eraseInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const removeContact = (contactId) => {\n    setContacts((prevState) => prevState.filter(({ id }) => id !== contactId))\n  }\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase()\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  return (\n    <div>\n      <Phonebook\n        onSubmit={handleSubmit}\n        onChange={handleChange}\n        name={name}\n        number={number}\n      ></Phonebook>\n      <Filter filter={filter} onChange={handleChange}></Filter>\n      <Contacts\n        contactsData={visibleContacts()}\n        onDeleteContact={removeContact}\n      ></Contacts>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}